<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>boatrain的博客</title><link>https://boatrainlsz.github.io/</link><description>boatrain的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 05 Jul 2023 21:29:04 +0800</lastBuildDate><atom:link href="https://boatrainlsz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Deepin安装Clash for Windows</title><link>https://boatrainlsz.github.io/posts/install-clash-on-linux/</link><pubDate>Wed, 05 Jul 2023 21:29:04 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/install-clash-on-linux/</guid><description>下载 从官方仓库下载下来，放到指定的目录下，这里以/opt/cfw为例。 制作快捷方式 提取logo 首先，我们把下载下来的压缩包解压，然后使用如下</description></item><item><title>metallb浅析</title><link>https://boatrainlsz.github.io/posts/metallb_deep_dive/</link><pubDate>Sat, 08 Apr 2023 08:23:15 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/metallb_deep_dive/</guid><description>前言 网络的所有问题都是关于路由(三层)与交换(二层)的问题，一个packet，只要弄清楚了它的四元组(src_ip，dst_ip，src_m</description></item><item><title>开发环境折腾之路</title><link>https://boatrainlsz.github.io/posts/setup_my_development_env/</link><pubDate>Sat, 19 Nov 2022 11:13:38 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/setup_my_development_env/</guid><description>从Windows迁移到Deepin 因为要在Windows下学习Linux开发，但是WSL的文件系统实在是感人，详见微软官方文档的Compar</description></item><item><title>使用openconnect客户端连接公司VPN以解决Clash冲突问题</title><link>https://boatrainlsz.github.io/posts/config_openconnect_to_remote_work/</link><pubDate>Sat, 02 Jul 2022 14:24:32 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/config_openconnect_to_remote_work/</guid><description>环境 Deepin 20.6 目的 Cisco Anyconnect和Clash冲突，科学上网和公司vpn无法兼得，一番调查后，按照v站此帖和此issue的说法，决定换用op</description></item><item><title>在Ubuntu上从源码构建最新版wireshark</title><link>https://boatrainlsz.github.io/posts/build_wireshark_from_source/</link><pubDate>Mon, 27 Jun 2022 22:26:26 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/build_wireshark_from_source/</guid><description>Deepin 20.6同样适用 下载源码 git clone https://gitlab.com/wireshark/wireshark.git 安装依赖项 sudo apt-get install flex g++ gcc perl python3 cmake build-essential -y 执行设置脚本 cd wireshark tools/debian-setup.sh --install-optional --install-deb-deps 安装 cd wireshark cmake . make make install 启动 wireshark 此时wireshark启动成功</description></item><item><title>IDEA本地搭建Pulsar调试环境</title><link>https://boatrainlsz.github.io/posts/pulsar_debug_in_ide/</link><pubDate>Fri, 27 May 2022 21:34:45 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/pulsar_debug_in_ide/</guid><description>部署zookeeper 本地debug部署个单机版的就够了，参考此教程。注意在zoo.cfg文件中配置下admin.serverPort，默认</description></item><item><title>Apache Pulsar in Action第二章读书笔记</title><link>https://boatrainlsz.github.io/posts/pulsar_in_action_ch02/</link><pubDate>Wed, 18 May 2022 21:22:51 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/pulsar_in_action_ch02/</guid><description>订阅(subscription) 每个订阅都有描述它的元数据，存放在Pulsar的Zookeeper中，包括但不限于： 此订阅的所有消费者的ht</description></item><item><title>用latex画出源代码与其汇编代码的关系图</title><link>https://boatrainlsz.github.io/posts/latex-research/</link><pubDate>Wed, 20 Apr 2022 09:21:51 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/latex-research/</guid><description>最近在看《程序员的自我修养》，看到静态链接这一章，看到elf文件的内存布局。由于纸质书的限制，经常看到后面的汇编，就忘了前面的源代码。所以尝</description></item><item><title>《程序员的自我修养》第三章——目标文件里有什么</title><link>https://boatrainlsz.github.io/posts/self-cultivation-of-programmer-ch03/</link><pubDate>Mon, 11 Apr 2022 11:32:14 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/self-cultivation-of-programmer-ch03/</guid><description>示例代码(main.c) int printf(const char *format, ...); int global_init_var = 84; int global_uninit_var; void func1(int i) { printf(&amp;#34;%d\n&amp;#34;, i); } int main(void) { static int static_var = 85; static int static_var2; int a = 1; int b; func1(static_var + static_var2 + a + b); return a; } 查看目标文件 gcc -c main.c objdump -s -d main.o</description></item><item><title>平时常用到的一些脚本</title><link>https://boatrainlsz.github.io/posts/common_scripts/</link><pubDate>Thu, 07 Apr 2022 13:51:27 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/common_scripts/</guid><description><![CDATA[整理一下平时常用到的一些脚本 批量删除docker镜像 ###删除mariadb的所有镜像 ###方法1 docker images|grep mariadb | awk &#39;BEGIN{OFS=&#34;:&#34;} {print $1,$2}&#39; | while read line; do docker rmi -f $line done ###]]></description></item></channel></rss>