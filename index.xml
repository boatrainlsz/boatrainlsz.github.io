<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>boatrain的博客</title><link>https://boatrainlsz.github.io/</link><description>boatrain的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 18 May 2022 21:22:51 +0800</lastBuildDate><atom:link href="https://boatrainlsz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache Pulsar in Action第二章读书笔记</title><link>https://boatrainlsz.github.io/posts/pulsar_in_action_ch02/</link><pubDate>Wed, 18 May 2022 21:22:51 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/pulsar_in_action_ch02/</guid><description>订阅模式 exclusive failover key-shared shared</description></item><item><title>用latex画出源代码与其汇编代码的关系图</title><link>https://boatrainlsz.github.io/posts/latex-research/</link><pubDate>Wed, 20 Apr 2022 09:21:51 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/latex-research/</guid><description>最近在看《程序员的自我修养》，看到静态链接这一章，看到elf文件的内存布局。由于纸质书的限制，经常看到后面的汇编，就忘了前面的源代码。所以尝</description></item><item><title>《程序员的自我修养》第三章——目标文件里有什么</title><link>https://boatrainlsz.github.io/posts/self-cultivation-of-programmer-ch03/</link><pubDate>Mon, 11 Apr 2022 11:32:14 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/self-cultivation-of-programmer-ch03/</guid><description>示例代码(main.c) int printf(const char *format, ...); int global_init_var = 84; int global_uninit_var; void func1(int i) { printf(&amp;#34;%d\n&amp;#34;, i); } int main(void) { static int static_var = 85; static int static_var2; int a = 1; int b; func1(static_var + static_var2 + a + b); return a; } 查看目标文件 gcc -c main.c objdump -s -d main.o</description></item><item><title>平时常用到的一些脚本</title><link>https://boatrainlsz.github.io/posts/common_scripts/</link><pubDate>Thu, 07 Apr 2022 13:51:27 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/common_scripts/</guid><description><![CDATA[整理一下平时常用到的一些脚本 批量删除docker镜像 ###删除mariadb的所有镜像 ###方法1 docker images|grep mariadb | awk &#39;BEGIN{OFS=&#34;:&#34;} {print $1,$2}&#39; | while read line; do docker rmi -f $line done ###]]></description></item><item><title>trivy共享漏洞数据库</title><link>https://boatrainlsz.github.io/posts/trivy_share_db/</link><pubDate>Wed, 06 Apr 2022 15:30:28 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/trivy_share_db/</guid><description>需求 已经在一台机器上安装了trivy，并下载了漏洞数据库。需要在另一台上也使用同版本的数据库，而不是去更新，因为初始化时，trivy都需要强</description></item><item><title>《计算机系统要素》第一章——布尔逻辑</title><link>https://boatrainlsz.github.io/posts/the-elements-of-computing-systems-ch01/</link><pubDate>Tue, 05 Apr 2022 11:32:14 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/the-elements-of-computing-systems-ch01/</guid><description>《计算机系统要素》第一章——布尔逻辑</description></item><item><title>JDK元空间的内存分配体系</title><link>https://boatrainlsz.github.io/posts/jvm_metaspace_improvement/</link><pubDate>Sun, 03 Apr 2022 09:22:39 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/jvm_metaspace_improvement/</guid><description>这是去年写在语雀上的文章，搬运过来。 前段时间偶然在Twitter看到了SAP工程师的一个分享，这位大佬给OpenJDK提了个JEP，几乎算是</description></item><item><title>基于寄存器调用惯例的Go语言接口调用机制</title><link>https://boatrainlsz.github.io/posts/go/</link><pubDate>Sat, 02 Apr 2022 21:35:40 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/go/</guid><description>本文是对此文章的学习与翻译。 摘要 其实这个机制和Java以及C++的接口调用机制差不多，都是基于itable，不过Java由于虚拟机规范中没有</description></item><item><title>go的并发编程</title><link>https://boatrainlsz.github.io/posts/first_post/</link><pubDate>Fri, 01 Apr 2022 21:23:12 +0800</pubDate><author>作者</author><guid>https://boatrainlsz.github.io/posts/first_post/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://miro.medium.com/max/1400/1*CdjOgfolLt_GNJYBzI-1QQ.jpeg" referrerpolicy="no-referrer">
            </div><p>go的并发编程示例</p>]]></description></item></channel></rss>